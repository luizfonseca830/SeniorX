domain my_domain

service my_service {
    endpoints {
    // add actions, queries, events and signals here
        "
        Primitiva que retorna uma mensagem de olá com o nome do requisitante
        Normalmente no campo who é informado seu próprio nome
        "
        public query helloWorld {
            in {
          //Parametro com o nome do requisitante
                who : string
            }
            out {
                "Saida com a mensagem de olá mundo"
                helloWorldMessage : string
            }
        }

        "Realiza a operação matematica de adição"
        public query calculadoraAdicao{
            in fieldCalculadora
            out fieldResultadoCalculadora
        }

        "Realiza a operação matematica de subtração"
        public query calculadoraSubtracao{
            in fieldCalculadora
            out fieldResultadoCalculadora
        }

        "Realiza a operação matematica de multiplicação"
        public query calculadoraMultiplicacao{
            in fieldCalculadora
            out fieldResultadoCalculadora
        }

        "Realiza a operação matematica de divisão"
        public query calculadoraDivisao{
            in fieldCalculadora
            out fieldResultadoCalculadora
        }

        // Repositórios -----------
        query findBynome{
            in {
                nome: string
            }
            out {
               resultado: convidado*
            }
        }

        query findIngressoBynomeConvidado{
            in {
                nomeConvidado: string
            }
            out {
                resultado: ingresso*
            }
        }

        action updateConvidadoNomeById{
            in {
                id: string
                nome: string
            }
            out {
                id: string
                nome: string
            }
        }

        "Cadastra um novo evento (ex: SeniorTec, Casamento, Aniversário, etc)"
        action cadastrarEvento{
            in {
                nome : string(10)
                "Caso o valor não seja informado, será false"
                apenasColaboradores : boolean? default:false
                lotacaoMaxima : integer minValue: 1 maxValue: 999
                data : date
                tipoEntradaEvento: tipoEntrada?*
            }
            out retornoCadastrarEvento
        }

        "Cadastrar um novo convidado e acompanhantes"
        action cadastrarConvidado{

            in {
                nome : fieldCadastroConvidado
                quantidadeAcompanhantes : integer minValue:0 maxValue:9
            }

            out {
                convidado : fieldCadastroConvidado
                resultado : resultadoCadastradoConvidado
            }

        }

        signal cancelarEvento{
            in {
                codigoEvento: string
            }
        }

        action comprarIngresso{
            in {
                nomeComprador: string
            }

            out {
                codigoIngresso : string
            }
        }

        event ingressoComprado {
            payload {
                codigoIngresso : string
            }
        }

        event pagamentoEstornado{
            payload{
               codigoIngresso : string
            }
        }

        signal estornarPagamentos {
            in {
                 ingressos : string*
            }
        }

    }
    types {
    // define records and enumerations here
        enumeration tipoEntrada {
            LIVRE
            NO_LOCAL
            ANTECIPADO
            LISTA
        }

        enumeration resultadoCadastradoConvidado {
            CADASTRADO_NOVO
            NAO_CADASTRADO_EXISTENTE
            NAO_CADASTRADO_ERRO
        }

        record mensagemRetornoComCodigo{
            mensagemRetorno: string
            codigoCadastrado: string //uuid
            contemErro: boolean?

        }

        record retornoCadastrarEvento extends mensagemRetornoComCodigo {
            //mensagem : mensagemRetornoComCodigo
            nome: string
            apenasColaboradores: boolean?
            lotacaoMaxima: integer
            data: date
            tipoEntradaEvento: tipoEntrada?*
        }

        record fieldCadastroConvidado {
            nome: string(20)
            nomeSocial: string?
        }

        record fieldCalculadora{
            "Primeiro número"
            numero1 : double
            "Segundo número"
            numero2 : double
        }

        record fieldResultadoCalculadora{
            "Resultado"
            resultado: string
        }

    }

    entities {
    // define any entities here

        "Entidade que representa o convidado de evento"
        entity convidado {
            "ID do convidado"
            id: uuid?
            "Nome do convidado"
            nome: string
            "Nome social do convidado"
            nomeSocial : string?
            "CPF do convidado"
            cpf: string
            "Data de nascimento do convidado"
            dataNascimneto: date
        }

        "Entidade que representa o evento"
        entity evento {
            "ID do evento"
            id: uuid?
            "Nome do evento"
            nome: string(30)
            lotacaoMaxima: integer minValue:1 maxValue:99999
            "Data e hora do evento"
            dataHora: dateTime
            "Enderenço do evento"
            endereco: string(50)
            "Tipos de entrada permitidos no evento"
            tipoentradaevento: tipoEntrada?*
            "Ingressos do evento"
            ingressos: ingresso?*
        }

        "Entidade que representa o ingresso"
        entity ingresso{
            "ID do ingresso"
            id: uuid?
            "Data e hora do evento. Opcional, pois a data e hora estão no evento"
            dataHora: dateTime?
            "Convidado dono do ingresso"
            convidado: convidado?
            "Quantidade de acompanhantes do ingresso"
            quantidadeAcompanhantes: integer minValue:0 maxValue:9
            "Evento que o ingresso pertence"
            evento: evento?
        }

        "Entidade que representa a atração do evento"
        entity atracao{
            "ID da atracao"
            id: uuid?
            "nome da atracao"
            nome: string
            "data e hora da atracao"
            dataHora: dateTime?
            "local da atracao"
            local: string(30)
            "Evento que a atracao pertence"
            evento: evento?
        }
    }
}
swagger: '2.0'

info:
  version: 0.0.1
  title: my_service
  x-senior-domain: my_domain
  x-senior-domain-path: my_domain
  x-senior-service-path: my_service
  contact:
    name: Senior X Platform
    url: https://dev.senior.com.br
    email: seniorx-dev@senior.com.br

host: api.senior.com.br

basePath: /my_domain/my_service/

securityDefinitions:
   bearerAuth:
     type: apiKey
     in: header
     name: Authorization

produces:
  - application/json
consumes:
  - application/json

paths:
  /queries/helloWorld:
    get:
      description: "\n
        Primitiva que retorna uma mensagem de olá com o nome do requisitante\n
        Normalmente no campo who é informado seu próprio nome\n
      "
      tags:
        - Endpoints
      security :
        - bearerAuth: []
      parameters:
        - name: who
          description: ""
          in: query
          required: true
          type: string
        - in: header
          name: Accept
          description: 'Content types and endpoint version for the request. Example: application/json;seniorx.version=2'
          type: string
      responses:
        200:
          description: Ok
          schema:
            type: object
            required:
              - helloWorldMessage
            properties:
              helloWorldMessage:
                type: string
                description: "Saida com a mensagem de olá mundo"
        default:
          description: Error response
          schema:
            $ref: '#/definitions/genericError'
  /signals/cancelarEvento:
    post:
      description: ""
      tags:
      - Signals
      parameters:
        - name: input
          in: body
          required: true
          schema:
            type: object
            required:
              - codigoEvento
            properties:
              codigoEvento:
                type: string
                description: ""
      responses:
        202:
          description: Accepted
        default:
          description: Error response
          schema:
            $ref: '#/definitions/genericError'
  
  /signals/estornarPagamentos:
    post:
      description: ""
      tags:
      - Signals
      parameters:
        - name: input
          in: body
          required: true
          schema:
            type: object
            required:
              - ingressos
            properties:
              ingressos:
                type: array
                items:
                  type: string
                  minimum: 1
                description: ""
      responses:
        202:
          description: Accepted
        default:
          description: Error response
          schema:
            $ref: '#/definitions/genericError'
  
definitions:
  tipoEntrada:
    description: ""
    type: string
    enum:
      - LIVRE
      - NO_LOCAL
      - ANTECIPADO
      - LISTA
    
  
  resultadoCadastradoConvidado:
    description: ""
    type: string
    enum:
      - CADASTRADO_NOVO
      - NAO_CADASTRADO_EXISTENTE
      - NAO_CADASTRADO_ERRO
    
  
  userNotificationKind:
    description: "User notification kind."
    type: string
    enum:
      - Operational
      - Management
      - News
    
  
  userNotificationPriority:
    description: "User notification priority."
    type: string
    enum:
      - Error
      - Alert
      - None
    
  
  eventEmailFormat:
    description: "Format of the email"
    type: string
    enum:
      - HTML
      - PLAIN_TEXT
    
  mensagemRetornoComCodigo:
    description: ""
    discriminator: _discriminator
    type: object
    required:
      - mensagemRetorno
      - codigoCadastrado
      - _discriminator
    properties:
      mensagemRetorno:
        type: string
        description: ""
      codigoCadastrado:
        type: string
        description: ""
      contemErro:
        type: boolean
        description: ""
      _discriminator:
        type: string
        description: ""
  
  retornoCadastrarEvento:
    description: ""
    allOf:
    - $ref: '#/definitions/mensagemRetornoComCodigo'
    - 
      type: object
      required:
        - nome
        - lotacaoMaxima
        - data
      properties:
        nome:
          type: string
          description: ""
        apenasColaboradores:
          type: boolean
          description: ""
        lotacaoMaxima:
          type: integer
          format: int64
          description: ""
        data:
          type: string
          format: date
          description: ""
        tipoEntradaEvento:
          type: array
          items:
            type: string
            allOf:
            - $ref: '#/definitions/tipoEntrada'
          description: ""
  
  fieldCadastroConvidado:
    description: ""
    type: object
    required:
      - nome
    properties:
      nome:
        type: string
        maxLength: 20
        description: ""
      nomeSocial:
        type: string
        description: ""
  
  notifyUserEventPayload:
    description: "Represents a regular user event notification payload"
    discriminator: _discriminator
    type: object
    required:
      - notificationKind
      - notificationPriority
      - notificationSubject
      - notificationContent
      - sourceDomain
      - sourceService
      - destinationUser
      - _discriminator
    properties:
      notificationClass:
        type: string
        description: "Class of notification"
      notificationOrigin:
        type: string
        description: "Origin of notification. Free text. Optional."
      notificationKind:
        type: string
        allOf:
        - $ref: '#/definitions/userNotificationKind'
        description: "Notification kind."
      notificationPriority:
        type: string
        allOf:
        - $ref: '#/definitions/userNotificationPriority'
        description: "Notification priority."
      notificationSubject:
        type: string
        description: "Notification subject."
      notificationContent:
        type: string
        description: "Notification content."
      sourceDomain:
        type: string
        description: "Domain that generates the notification."
      sourceService:
        type: string
        description: "Service that generates the notification."
      destinationUser:
        type: string
        description: "Username of the destination user."
      link:
        type: string
        description: "Notification link"
      _discriminator:
        type: string
        description: ""
  
  emailNotifyUserEventPayload:
    description: "Represents an email notification payload"
    allOf:
    - $ref: '#/definitions/notifyUserEventPayload'
    - 
      type: object
      required:
        - from
      properties:
        from:
          type: string
          description: "Email sender address"
        sendTo:
          type: array
          items:
            type: string
          description: "Additional recipients to send the email to"
        format:
          type: string
          allOf:
          - $ref: '#/definitions/eventEmailFormat'
          description: "Email format"
  
  pushNotifyUserEventPayload:
    description: "Represents a push notification payload"
    allOf:
    - $ref: '#/definitions/notifyUserEventPayload'
    - 
      type: object
      required:
        - applicationId
      properties:
        applicationId:
          type: string
          description: "Apple/Google application id"
  
  blobReference:
    description: "Default blob reference type. Every service defines its own."
    type: object
    required:
      - targetObjectId
    properties:
      domainName:
        type: string
        description: "The domain the blob belongs to."
      serviceName:
        type: string
        description: "The service the blob belongs to."
      targetObjectId:
        type: string
        description: "The basic id of the blob."
      targetCopyId:
        type: string
        description: "The id of the blob copy."
  
  basicErrorPayload:
    description: "Default error payload type. Every service defines its own."
    type: object
    properties:
      message:
        type: string
        description: "The user-facing error message, if any."
      errorCode:
        type: string
        description: "The program-accessible (and service-specific) error code."
  
  dependency:
    description: "Represents a service dependency"
    type: object
    required:
      - domain
      - service
      - version
    properties:
      domain:
        type: string
        description: "Domain of the dependency service"
      service:
        type: string
        description: "Name of the dependency service"
      version:
        type: string
        description: "Version of the dependency service"
  
  genericError:
    properties:
      message:
        type: string
        description: Messaging describing the error.
      reason:
        type: string
        description: A symbolic code identifying the category of the reason of the error.
        enum:
          - BAD_REQUEST
          - UNAUTHORIZED
          - PAYMENT_REQUIRED
          - FORBIDDEN
          - OBJECT_NOT_FOUND
          - REQUEST_TIMEOUT
          - GONE
          - UNPROCESSABLE
          - INTERNAL_ERROR
          - NOT_IMPLEMENTED
          - SERVICE_UNAVAILABLE
          - INSUFFICIENT_STORAGE
